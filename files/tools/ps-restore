#!/usr/bin/env php
<?php

$rootPath = $dumpPath = '';
$domain = [];
$restoreDb = true;
$useSsl = false;

$args = $argv;
array_shift($args);

do {
    $arg = array_shift($args);
    switch ($arg) {
        case '--root':
            $rootPath = realpath(array_shift($args));
            break;
        case '--domain':
            $domain[] = array_shift($args);
            break;
        case '--keep-db':
            $restoreDb = false;
            break;
        case '--use-ssl':
            $useSsl = true;
            break;
    }
} while ($arg !== null);

if (empty($rootPath) || empty($domain)) {
    echo 'Usage: ', $argv[0], ' [--keep-db] [--use-ssl] --root root_directory --domain myprestashop.antidot.be [--domain mysecondshop.antidot.be]', PHP_EOL, 'Bye!', PHP_EOL;
    exit(1);
}

$dumpPath = $rootPath . '/build/database';
if (!is_dir($dumpPath)) {
    mkdir($dumpPath, 0700, true);
}
$dumpPath = realpath($dumpPath);

require_once 'common.php';

if ($restoreDb) {
    $files = glob($dumpPath . '/*.dump.sql');

    if (empty($files)) {
        echo 'Dump files not found in ', $dumpPath, PHP_EOL;
        exit(1);
    }

    echo count($files), ' files will be inserted', PHP_EOL;

    echo 'Dropping all tables... ';

    $tables = Db::getInstance()->executeS('SHOW TABLES');
    foreach ($tables as $table) {
        Db::getInstance()->query('DROP TABLE ' . current($table));
    }
    echo 'done', PHP_EOL;

    foreach ($files as $file) {
        echo $file, '... ';
        if (Db::getInstance()->query(file_get_contents($file))) {
            echo 'ok', PHP_EOL;
        } else {
            echo 'KO !', PHP_EOL;
        }
    }
}

/**
 * Change the shop domains
 */
$domainId = 0;
foreach ($domain as $domainUrl) {
    do {
        $domainId++;
        $shop = new ShopUrlCore($domainId);
    } while (empty($shop->id_shop));

    printf('Shop %d: %s' . PHP_EOL, $domainId, $domainUrl);

    $shop->domain = $shop->domain_ssl = $domainUrl;
    $shop->update();

    ConfigurationCore::updateValue('PS_SHOP_DOMAIN', $domain, false, 1, $domainId);
    ConfigurationCore::updateValue('PS_SHOP_DOMAIN_SSL', $domain, false, 1, $domainId);

    /** Change SSL presence */
    ConfigurationCore::updateValue('PS_SSL_ENABLED', $useSsl, false, 1, $domainId);
    ConfigurationCore::updateValue('PS_SSL_ENABLED_EVERYWHERE', $useSsl, false, 1, $domainId);
}

/**
 * Create img/* if it does not exist
 */
foreach (['/img/tmp', '/img/tmp'] as $folder) {
    if (!is_dir($rootPath . $folder)) {
        mkdir($rootPath . $folder, 0775, true);
    }
}

/**
 * Initialise cached files for modules
 */

echo 'Clean FS cache... ';
CacheFs::deleteCacheDirectory();
echo 'ok', PHP_EOL;

